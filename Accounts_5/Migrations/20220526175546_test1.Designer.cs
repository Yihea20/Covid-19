// <auto-generated />
using Accounts_5.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Accounts_5.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220526175546_test1")]
    partial class test1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Accounts_5.Data.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Newss");
                });

            modelBuilder.Entity("Accounts_5.Data.Vaccination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllowedAge")
                        .HasColumnType("int");

                    b.Property<int>("DosesNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vaccinations");
                });

            modelBuilder.Entity("Accounts_5.Data.VaccinationCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VaccinationCenters");
                });

            modelBuilder.Entity("Accounts_5.Data.VaccinationCenter_Vaccination", b =>
                {
                    b.Property<int>("vaccinationId")
                        .HasColumnType("int");

                    b.Property<int>("vaccinationCenterId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("vaccinationId", "vaccinationCenterId");

                    b.HasIndex("vaccinationCenterId");

                    b.ToTable("vaccinationCenter_Vaccinations");
                });

            modelBuilder.Entity("Accounts_5.Data.VaccinationCenter_Vaccination", b =>
                {
                    b.HasOne("Accounts_5.Data.VaccinationCenter", "vaccinationCenter")
                        .WithMany("VaccinationCenter_Vaccinations")
                        .HasForeignKey("vaccinationCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Accounts_5.Data.Vaccination", "vaccination")
                        .WithMany("VaccinationCenter_Vaccinations")
                        .HasForeignKey("vaccinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vaccination");

                    b.Navigation("vaccinationCenter");
                });

            modelBuilder.Entity("Accounts_5.Data.Vaccination", b =>
                {
                    b.Navigation("VaccinationCenter_Vaccinations");
                });

            modelBuilder.Entity("Accounts_5.Data.VaccinationCenter", b =>
                {
                    b.Navigation("VaccinationCenter_Vaccinations");
                });
#pragma warning restore 612, 618
        }
    }
}
